{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../mock-service.service\";\nimport * as i2 from \"../http/http.service\";\nexport class UserService {\n  constructor(mockservice, httpservice) {\n    this.mockservice = mockservice;\n    this.httpservice = httpservice;\n  }\n  updateUser(user) {\n    console.log(user);\n    this.mockservice.updateUser(user);\n  }\n  insertUser(user) {\n    this.mockservice.insertUser(user);\n  }\n  getAllUsers() {\n    var data = this.httpservice.getData('localhost:9080/api/user/v1/allusers', undefined);\n    return data;\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.MockServiceService), i0.ɵɵinject(i2.HttpService));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["UserService","constructor","mockservice","httpservice","updateUser","user","console","log","insertUser","getAllUsers","data","getData","undefined","i0","ɵɵinject","i1","MockServiceService","i2","HttpService","factory","ɵfac","providedIn"],"sources":["D:\\Projects\\AngularWorkSpace\\AngularAssignment\\demo-list\\src\\app\\user-service\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { MockServiceService } from '../mock-service.service';\r\nimport { User } from '../user-component/user-model';\r\nimport { HttpService } from '../http/http.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  \r\n  users: User[] | undefined;\r\n\r\n  constructor(private mockservice: MockServiceService, private httpservice : HttpService) { }\r\n\r\n  updateUser(user:User) {\r\n    console.log(user);\r\n    this.mockservice.updateUser(user);\r\n  }\r\n\r\n  insertUser(user:User) {\r\n    this.mockservice.insertUser(user);\r\n  }\r\n\r\n   getAllUsers(): any {\r\n    var data = this.httpservice.getData('localhost:9080/api/user/v1/allusers', undefined)\r\n    return data;\r\n  }\r\n}\r\n"],"mappings":";;;AAQA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,WAA+B,EAAUC,WAAyB;IAAlE,KAAAD,WAAW,GAAXA,WAAW;IAA8B,KAAAC,WAAW,GAAXA,WAAW;EAAkB;EAE1FC,UAAUA,CAACC,IAAS;IAClBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,IAAI,CAACH,WAAW,CAACE,UAAU,CAACC,IAAI,CAAC;EACnC;EAEAG,UAAUA,CAACH,IAAS;IAClB,IAAI,CAACH,WAAW,CAACM,UAAU,CAACH,IAAI,CAAC;EACnC;EAECI,WAAWA,CAAA;IACV,IAAIC,IAAI,GAAG,IAAI,CAACP,WAAW,CAACQ,OAAO,CAAC,qCAAqC,EAAEC,SAAS,CAAC;IACrF,OAAOF,IAAI;EACb;;AAlBWV,WAAW,C;mBAAXA,WAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,kBAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;AAAA;AAAXlB,WAAW,C;SAAXA,WAAW;EAAAmB,OAAA,EAAXnB,WAAW,CAAAoB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}