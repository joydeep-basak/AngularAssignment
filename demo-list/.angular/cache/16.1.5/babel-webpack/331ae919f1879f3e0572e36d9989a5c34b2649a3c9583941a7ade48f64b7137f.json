{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HttpService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  getData(host, params) {\n    this.httpClient.get(host + (params == undefined ? '' : params)).subscribe(data => {\n      return data;\n    }, error => {\n      return error;\n    });\n  }\n}\nHttpService.ɵfac = function HttpService_Factory(t) {\n  return new (t || HttpService)(i0.ɵɵinject(i1.HttpClient));\n};\nHttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HttpService,\n  factory: HttpService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpService","constructor","httpClient","getData","host","params","get","undefined","subscribe","data","error","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Projects\\AngularWorkSpace\\AngularAssignment\\demo-list\\src\\app\\http\\http.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../user-component/user-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getData(host: string, params : any) : Observable<User[]> {\r\n    this.httpClient.get<User[]>(host + (params == undefined? '':params))\r\n      .subscribe(\r\n        data => {\r\n          return data;\r\n        },\r\n        error => {\r\n          return error;\r\n        }\r\n      );\r\n  }\r\n\r\n\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAgB;EAEvCC,OAAOA,CAACC,IAAY,EAAEC,MAAY;IACvC,IAAI,CAACH,UAAU,CAACI,GAAG,CAASF,IAAI,IAAIC,MAAM,IAAIE,SAAS,GAAE,EAAE,GAACF,MAAM,CAAC,CAAC,CACjEG,SAAS,CACRC,IAAI,IAAG;MACL,OAAOA,IAAI;IACb,CAAC,EACDC,KAAK,IAAG;MACN,OAAOA,KAAK;IACd,CAAC,CACF;EACL;;AAdWV,WAAW,C;mBAAXA,WAAW,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXd,WAAW,C;SAAXA,WAAW;EAAAe,OAAA,EAAXf,WAAW,CAAAgB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}