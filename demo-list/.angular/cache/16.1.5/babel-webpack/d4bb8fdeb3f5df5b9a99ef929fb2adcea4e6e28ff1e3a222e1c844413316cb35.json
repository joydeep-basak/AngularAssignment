{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HttpService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  getData(host, params) {\n    return this.httpClient.get(host + (params == undefined ? '' : params));\n  }\n}\nHttpService.ɵfac = function HttpService_Factory(t) {\n  return new (t || HttpService)(i0.ɵɵinject(i1.HttpClient));\n};\nHttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HttpService,\n  factory: HttpService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpService","constructor","httpClient","getData","host","params","get","undefined","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Projects\\AngularWorkSpace\\AngularAssignment\\demo-list\\src\\app\\http\\http.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../user-component/user-model';\r\nimport { ReturnModel } from './return-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getData(host: string, params : any) : Observable<ReturnModel> {\r\n    return this.httpClient.get<ReturnModel>(host + (params == undefined? '':params))\r\n     \r\n  }\r\n\r\n\r\n}\r\n"],"mappings":";;AASA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAgB;EAEvCC,OAAOA,CAACC,IAAY,EAAEC,MAAY;IACvC,OAAO,IAAI,CAACH,UAAU,CAACI,GAAG,CAAcF,IAAI,IAAIC,MAAM,IAAIE,SAAS,GAAE,EAAE,GAACF,MAAM,CAAC,CAAC;EAElF;;AAPWL,WAAW,C;mBAAXA,WAAW,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXX,WAAW,C;SAAXA,WAAW;EAAAY,OAAA,EAAXZ,WAAW,CAAAa,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}