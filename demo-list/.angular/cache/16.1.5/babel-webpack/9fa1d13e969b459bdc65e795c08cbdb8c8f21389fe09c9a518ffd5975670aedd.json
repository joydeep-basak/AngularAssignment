{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class MockServiceService {\n  constructor() {\n    this.users = [{\n      userid: 1,\n      username: \"name 1\",\n      address: \"Address 1\",\n      pincode: \"pincode 1\"\n    }, {\n      userid: 2,\n      username: \"name 2\",\n      address: \"Address 2\",\n      pincode: \"pincode 2\"\n    }, {\n      userid: 3,\n      username: \"name 3\",\n      address: \"Address 3\",\n      pincode: \"pincode 3\"\n    }];\n  }\n  updateUser(user) {\n    console.log(user);\n    for (let i = 0; i < this.users.length; i++) {\n      if (user.userid == this.users[i].userid) {\n        this.users[i] = user;\n        break;\n      }\n    }\n    alert('User updated event called ' + user.userid + \"|\" + user.username);\n  }\n  insertUser(user) {\n    user.userid = this.users.length + 1;\n    this.users.push(user);\n  }\n  getAllUsers() {\n    return this.users;\n  }\n}\nMockServiceService.ɵfac = function MockServiceService_Factory(t) {\n  return new (t || MockServiceService)();\n};\nMockServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MockServiceService,\n  factory: MockServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["MockServiceService","constructor","users","userid","username","address","pincode","updateUser","user","console","log","i","length","alert","insertUser","push","getAllUsers","factory","ɵfac","providedIn"],"sources":["D:\\Projects\\AngularWorkSpace\\AngularAssignment\\demo-list\\src\\app\\mock-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { User } from './user-component/user-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MockServiceService {\r\n\r\n  users: User[] = [\r\n    {\r\n      userid:1,\r\n      username: \"name 1\",\r\n      address:\"Address 1\",\r\n      pincode: \"pincode 1\"\r\n    },\r\n    {\r\n      userid:2,\r\n      username: \"name 2\",\r\n      address:\"Address 2\",\r\n      pincode: \"pincode 2\"\r\n    },\r\n    {\r\n      userid:3,\r\n      username: \"name 3\",\r\n      address:\"Address 3\",\r\n      pincode: \"pincode 3\"\r\n    },\r\n  ];\r\n\r\n  constructor() { }\r\n\r\n  updateUser(user:User) {\r\n    console.log(user);\r\n    for (let i = 0; i < this.users.length; i++) {\r\n      if (user.userid == this.users[i].userid) {\r\n        this.users[i] = user;\r\n        break;\r\n      }\r\n    }\r\n    alert('User updated event called ' + user.userid + \"|\" + user.username)\r\n  }\r\n\r\n  insertUser(user:User) {\r\n    user.userid = this.users.length + 1;\r\n    this.users.push(user);\r\n  }\r\n\r\n  getAllUsers() {\r\n    return this.users;\r\n  }\r\n}\r\n"],"mappings":";AAMA,OAAM,MAAOA,kBAAkB;EAuB7BC,YAAA;IArBA,KAAAC,KAAK,GAAW,CACd;MACEC,MAAM,EAAC,CAAC;MACRC,QAAQ,EAAE,QAAQ;MAClBC,OAAO,EAAC,WAAW;MACnBC,OAAO,EAAE;KACV,EACD;MACEH,MAAM,EAAC,CAAC;MACRC,QAAQ,EAAE,QAAQ;MAClBC,OAAO,EAAC,WAAW;MACnBC,OAAO,EAAE;KACV,EACD;MACEH,MAAM,EAAC,CAAC;MACRC,QAAQ,EAAE,QAAQ;MAClBC,OAAO,EAAC,WAAW;MACnBC,OAAO,EAAE;KACV,CACF;EAEe;EAEhBC,UAAUA,CAACC,IAAS;IAClBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACT,KAAK,CAACU,MAAM,EAAED,CAAC,EAAE,EAAE;MAC1C,IAAIH,IAAI,CAACL,MAAM,IAAI,IAAI,CAACD,KAAK,CAACS,CAAC,CAAC,CAACR,MAAM,EAAE;QACvC,IAAI,CAACD,KAAK,CAACS,CAAC,CAAC,GAAGH,IAAI;QACpB;;;IAGJK,KAAK,CAAC,4BAA4B,GAAGL,IAAI,CAACL,MAAM,GAAG,GAAG,GAAGK,IAAI,CAACJ,QAAQ,CAAC;EACzE;EAEAU,UAAUA,CAACN,IAAS;IAClBA,IAAI,CAACL,MAAM,GAAG,IAAI,CAACD,KAAK,CAACU,MAAM,GAAG,CAAC;IACnC,IAAI,CAACV,KAAK,CAACa,IAAI,CAACP,IAAI,CAAC;EACvB;EAEAQ,WAAWA,CAAA;IACT,OAAO,IAAI,CAACd,KAAK;EACnB;;AA3CWF,kBAAkB,C;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB,C;SAAlBA,kBAAkB;EAAAiB,OAAA,EAAlBjB,kBAAkB,CAAAkB,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}